{"version":3,"sources":["webpack:///./src/template/project-details.js","webpack:///./src/elements/image.js"],"names":["ProjectDetails","_ref","data","projectData","projectJson","projectImage","features","React","createElement","Layout","className","title","FiList","category","FiUser","client","FiInstagram","imgesBY","body","Image","fluid","featured_image","childImageSharp","map","index","key","Img","image","NonStretchedImage","props","alignment","normalizedProps","aspectRatio","align","presentationWidth","style","maxWidth","margin"],"mappings":"8FAAA,yFA0FeA,UApFQC,IAAa,IAAZ,KAACC,GAAKD,EAC1B,MAAME,EAAcD,EAAKE,YACnBC,EAAeH,EAAKE,YAAYE,SACtC,OACIC,IAAAC,cAACC,IAAM,KACHF,IAAAC,cAAA,OAAKE,UAAU,yDACXH,IAAAC,cAAA,OAAKE,UAAU,aACXH,IAAAC,cAAA,OAAKE,UAAU,OACXH,IAAAC,cAAA,OAAKE,UAAU,aACXH,IAAAC,cAAA,OAAKE,UAAU,SACXH,IAAAC,cAAA,OAAKE,UAAU,qBACXH,IAAAC,cAAA,OAAKE,UAAU,OACXH,IAAAC,cAAA,OAAKE,UAAU,8BACXH,IAAAC,cAAA,OAAKE,UAAU,gBACXH,IAAAC,cAAA,OAAKE,UAAU,YACXH,IAAAC,cAAA,MAAIE,UAAU,gBAAgBP,EAAYQ,QAE9CJ,IAAAC,cAAA,MAAIE,UAAU,UAAS,WACvBH,IAAAC,cAAA,MAAIE,UAAU,eACVH,IAAAC,cAAA,UAAID,IAAAC,cAAA,QAAME,UAAU,QAAOH,IAAAC,cAACI,IAAM,MAAG,aAAgBL,IAAAC,cAAA,QAAME,UAAU,eAAeP,EAAYU,WAChGN,IAAAC,cAAA,UAAID,IAAAC,cAAA,QAAME,UAAU,QAAOH,IAAAC,cAACM,IAAM,MAAG,WAAcP,IAAAC,cAAA,QAAME,UAAU,eAAeP,EAAYY,SAC9FR,IAAAC,cAAA,UAAID,IAAAC,cAAA,QAAME,UAAU,QAAOH,IAAAC,cAACQ,IAAW,MAAG,cAAiBT,IAAAC,cAAA,QAAME,UAAU,eAAeP,EAAYc,WAE1GV,IAAAC,cAAA,KAAGE,UAAU,UAAUP,EAAYe,UAMnDX,IAAAC,cAAA,OAAKE,UAAU,wCACXH,IAAAC,cAACW,IAAK,CAACC,MAAOjB,EAAYkB,eAAeC,gBAAgBF,SAG7Db,IAAAC,cAAA,OAAKE,UAAU,eACVL,EAAakB,IAAI,CAACrB,EAAMsB,IACrBjB,IAAAC,cAAA,OAAKE,UAAU,sBAAsBe,IAAKD,GACtCjB,IAAAC,cAACkB,IAAG,CAACN,MAAOlB,EAAKyB,MAAML,gBAAgBF,mB,kCC1CnF,8CA6BeQ,IA1BWC,IACtB,IAEIC,EAFAC,EAAkBF,EAsBtB,OArBAE,EAAkB,IAAIA,EAAgBX,MAAOY,YAAa,GAGtDF,EADe,UAAhBD,EAAMI,MACO,aACU,SAAhBJ,EAAMI,MACA,aAEA,SAGZJ,EAAMT,OAASS,EAAMT,MAAMc,oBAC3BH,EAAkB,IACXF,EACHM,MAAO,IACCN,EAAMM,OAAS,GACnBC,SAAUP,EAAMT,MAAMc,kBACtBG,OAAQP,KAKbvB,IAAAC,cAACkB,IAAQK","file":"component---src-template-project-details-js-a9a334f3cc9670fbfaa3.js","sourcesContent":["import React from 'react';\r\nimport Img from \"gatsby-image\";\r\nimport Image from \"../elements/image\";\r\nimport { FiList, FiUser, FiInstagram } from \"react-icons/fi\";\r\nimport Layout from \"../components/layout\";\r\n\r\nconst ProjectDetails = ({data}) => {\r\n    const projectData = data.projectJson;\r\n    const projectImage = data.projectJson.features;\r\n    return (\r\n        <Layout>\r\n            <div className=\"rn-project-details-area rn-section-gap bg-color-white\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner\">\r\n                                <div className=\"portfolio-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12 col-md-12 col-12\">\r\n                                            <div className=\"content-left\">\r\n                                                <div className=\"page-top\">\r\n                                                    <h1 className=\"title_holder\">{projectData.title}</h1>\r\n                                                </div>\r\n                                                <h3 className=\"mt--20\">Details</h3>\r\n                                                <ul className=\"list_holder\">\r\n                                                    <li><span className=\"icon\"><FiList />Category:</span><span className=\"projectinfo\">{projectData.category}</span></li>\r\n                                                    <li><span className=\"icon\"><FiUser />Client:</span><span className=\"projectinfo\">{projectData.client}</span></li>\r\n                                                    <li><span className=\"icon\"><FiInstagram />Images by:</span><span className=\"projectinfo\">{projectData.imgesBY}</span></li>\r\n                                                </ul>\r\n                                                <p className=\"mt--20\">{projectData.body}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"thumbnail mt--90 mt_md--40 mt_sm--40\">\r\n                                    <Image fluid={projectData.featured_image.childImageSharp.fluid} />\r\n                                </div>\r\n\r\n                                <div className=\"image-group\">\r\n                                    {projectImage.map((data, index) => (\r\n                                        <div className=\"single-image mt--30\" key={index}>\r\n                                            <Img fluid={data.image.childImageSharp.fluid} />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>   \r\n\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql `\r\n    query($id: String!) {\r\n        projectJson(id: {eq: $id}) {\r\n            id\r\n            title\r\n            body\r\n            category\r\n            client\r\n            imgesBY\r\n            featured_image {\r\n                childImageSharp {\r\n                    fluid(maxHeight: 1000, maxWidth: 1920, quality: 100) {\r\n                        ...GatsbyImageSharpFluid_withWebp\r\n                        presentationHeight\r\n                        presentationWidth\r\n                    }\r\n                }\r\n            },\r\n            features {\r\n                image {\r\n                    childImageSharp {\r\n                      fluid(maxWidth: 1920, maxHeight: 1280, quality: 100) {\r\n                        ...GatsbyImageSharpFluid_withWebp\r\n                        presentationWidth\r\n                        presentationHeight\r\n                      }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n`;\r\nexport default ProjectDetails;","import React from \"react\";\r\nimport Img from \"gatsby-image\";\r\n\r\nconst NonStretchedImage = props => {\r\n    let normalizedProps = props\r\n    normalizedProps = {...normalizedProps.fluid, aspectRatio: 1}\r\n    let alignment;\r\n    if(props.align === 'right'){\r\n        alignment = '0 0 0 auto'\r\n    } else if(props.align === 'left'){\r\n        alignment = '0 auto 0 0'\r\n    }else{\r\n        alignment = '0 auto'\r\n    }\r\n\r\n    if (props.fluid && props.fluid.presentationWidth) {\r\n        normalizedProps = {\r\n            ...props,\r\n            style: {\r\n                ...(props.style || {}),\r\n                maxWidth: props.fluid.presentationWidth,\r\n                margin: alignment, \r\n            },\r\n        }\r\n    }\r\n\r\n    return <Img {...normalizedProps} />\r\n}\r\n\r\nexport default NonStretchedImage;"],"sourceRoot":""}